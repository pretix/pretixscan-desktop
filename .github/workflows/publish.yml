name: Publish
on:
  push:
  pull_request:
    branches:
      - master
      - main
      - update-tornadofx

# prevent duplicate runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  publish:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, ubuntu-24.04-arm]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true # needed for libpretixsync and libpretixprint
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Package App
        working-directory: ./pretixscan
        run: ./gradlew packageDistributionForCurrentOS

      - name: Read version
        working-directory: ./pretixscan
        run: ./gradlew -q printVersion >> $GITHUB_ENV

      # Upload Windows executables and installers
      - name: Upload Windows Apps
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: pretixSCAN-${{ env.pretixVersion }}-win-x86_64.msi
          path: ./pretixscan/composeApp/build/compose/binaries/main/msi/pretixSCAN-${{ env.pretixVersion }}.msi

      - name: Upload Linux amd64
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: pretixSCAN-${{ env.pretixVersion }}-linux-amd64.deb
          path: ./pretixscan/composeApp/build/compose/binaries/main/deb/pretixscan_${{ env.pretixVersion }}-1_amd64.deb

      - name: Upload Linux arm
        if: matrix.os == 'ubuntu-24.04-arm'
        uses: actions/upload-artifact@v4
        with:
          name: pretixSCAN-${{ env.pretixVersion }}-linux-arm64.deb
          path: ./pretixscan/composeApp/build/compose/binaries/main/deb/pretixscan_${{ env.pretixVersion }}-1_arm64.deb

      # Upload MacOS package
      - name: Upload MacOS App
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: pretixSCAN-${{ env.pretixVersion }}-macOS.dmg
          path: ./pretixscan/composeApp/build/compose/binaries/main/dmg/pretixscan-${{ env.pretixVersion }}.dmg
